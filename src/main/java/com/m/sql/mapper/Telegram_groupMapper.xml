<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.m.sql.mapper.Telegram_groupMapper">
  <resultMap id="BaseResultMap" type="com.m.sql.entity.Telegram_group">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="groupId" jdbcType="CHAR" property="groupId" />
    <result column="firstJoinTime" jdbcType="TIMESTAMP" property="firstJoinTime" />
    <result column="joinTime" jdbcType="TIMESTAMP" property="joinTime" />
    <result column="finishGame" jdbcType="INTEGER" property="finishGame" />
    <result column="botAdmin" jdbcType="BIT" property="botAdmin" />
    <result column="joinFrequency" jdbcType="INTEGER" property="joinFrequency" />
    <result column="kickOutFrequency" jdbcType="INTEGER" property="kickOutFrequency" />
    <result column="MaxOfPeople" jdbcType="INTEGER" property="maxOfPeople" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="title" jdbcType="CHAR" property="title" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, groupId, firstJoinTime, joinTime, finishGame, botAdmin, joinFrequency, kickOutFrequency, 
    MaxOfPeople, language, userName, title
  </sql>
  <select id="selectByExample" parameterType="com.m.sql.entity.Telegram_groupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from telegram_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from telegram_group
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from telegram_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.m.sql.entity.Telegram_groupExample">
    delete from telegram_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.m.sql.entity.Telegram_group">
    insert into telegram_group (id, groupId, firstJoinTime, 
      joinTime, finishGame, botAdmin, 
      joinFrequency, kickOutFrequency, MaxOfPeople, 
      language, userName, title
      )
    values (#{id,jdbcType=INTEGER}, #{groupId,jdbcType=CHAR}, #{firstJoinTime,jdbcType=TIMESTAMP}, 
      #{joinTime,jdbcType=TIMESTAMP}, #{finishGame,jdbcType=INTEGER}, #{botAdmin,jdbcType=BIT}, 
      #{joinFrequency,jdbcType=INTEGER}, #{kickOutFrequency,jdbcType=INTEGER}, #{maxOfPeople,jdbcType=INTEGER}, 
      #{language,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{title,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.m.sql.entity.Telegram_group">
    insert into telegram_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="groupId != null">
        groupId,
      </if>
      <if test="firstJoinTime != null">
        firstJoinTime,
      </if>
      <if test="joinTime != null">
        joinTime,
      </if>
      <if test="finishGame != null">
        finishGame,
      </if>
      <if test="botAdmin != null">
        botAdmin,
      </if>
      <if test="joinFrequency != null">
        joinFrequency,
      </if>
      <if test="kickOutFrequency != null">
        kickOutFrequency,
      </if>
      <if test="maxOfPeople != null">
        MaxOfPeople,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="userName != null">
        userName,
      </if>
      <if test="title != null">
        title,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=CHAR},
      </if>
      <if test="firstJoinTime != null">
        #{firstJoinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="joinTime != null">
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishGame != null">
        #{finishGame,jdbcType=INTEGER},
      </if>
      <if test="botAdmin != null">
        #{botAdmin,jdbcType=BIT},
      </if>
      <if test="joinFrequency != null">
        #{joinFrequency,jdbcType=INTEGER},
      </if>
      <if test="kickOutFrequency != null">
        #{kickOutFrequency,jdbcType=INTEGER},
      </if>
      <if test="maxOfPeople != null">
        #{maxOfPeople,jdbcType=INTEGER},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.m.sql.entity.Telegram_groupExample" resultType="java.lang.Long">
    select count(*) from telegram_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update telegram_group
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null">
        groupId = #{record.groupId,jdbcType=CHAR},
      </if>
      <if test="record.firstJoinTime != null">
        firstJoinTime = #{record.firstJoinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.joinTime != null">
        joinTime = #{record.joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishGame != null">
        finishGame = #{record.finishGame,jdbcType=INTEGER},
      </if>
      <if test="record.botAdmin != null">
        botAdmin = #{record.botAdmin,jdbcType=BIT},
      </if>
      <if test="record.joinFrequency != null">
        joinFrequency = #{record.joinFrequency,jdbcType=INTEGER},
      </if>
      <if test="record.kickOutFrequency != null">
        kickOutFrequency = #{record.kickOutFrequency,jdbcType=INTEGER},
      </if>
      <if test="record.maxOfPeople != null">
        MaxOfPeople = #{record.maxOfPeople,jdbcType=INTEGER},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        userName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update telegram_group
    set id = #{record.id,jdbcType=INTEGER},
      groupId = #{record.groupId,jdbcType=CHAR},
      firstJoinTime = #{record.firstJoinTime,jdbcType=TIMESTAMP},
      joinTime = #{record.joinTime,jdbcType=TIMESTAMP},
      finishGame = #{record.finishGame,jdbcType=INTEGER},
      botAdmin = #{record.botAdmin,jdbcType=BIT},
      joinFrequency = #{record.joinFrequency,jdbcType=INTEGER},
      kickOutFrequency = #{record.kickOutFrequency,jdbcType=INTEGER},
      MaxOfPeople = #{record.maxOfPeople,jdbcType=INTEGER},
      language = #{record.language,jdbcType=VARCHAR},
      userName = #{record.userName,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.m.sql.entity.Telegram_group">
    update telegram_group
    <set>
      <if test="groupId != null">
        groupId = #{groupId,jdbcType=CHAR},
      </if>
      <if test="firstJoinTime != null">
        firstJoinTime = #{firstJoinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="joinTime != null">
        joinTime = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishGame != null">
        finishGame = #{finishGame,jdbcType=INTEGER},
      </if>
      <if test="botAdmin != null">
        botAdmin = #{botAdmin,jdbcType=BIT},
      </if>
      <if test="joinFrequency != null">
        joinFrequency = #{joinFrequency,jdbcType=INTEGER},
      </if>
      <if test="kickOutFrequency != null">
        kickOutFrequency = #{kickOutFrequency,jdbcType=INTEGER},
      </if>
      <if test="maxOfPeople != null">
        MaxOfPeople = #{maxOfPeople,jdbcType=INTEGER},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.m.sql.entity.Telegram_group">
    update telegram_group
    set groupId = #{groupId,jdbcType=CHAR},
      firstJoinTime = #{firstJoinTime,jdbcType=TIMESTAMP},
      joinTime = #{joinTime,jdbcType=TIMESTAMP},
      finishGame = #{finishGame,jdbcType=INTEGER},
      botAdmin = #{botAdmin,jdbcType=BIT},
      joinFrequency = #{joinFrequency,jdbcType=INTEGER},
      kickOutFrequency = #{kickOutFrequency,jdbcType=INTEGER},
      MaxOfPeople = #{maxOfPeople,jdbcType=INTEGER},
      language = #{language,jdbcType=VARCHAR},
      userName = #{userName,jdbcType=VARCHAR},
      title = #{title,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from telegram_group
  </select>

  <select id="selectByGroupId" parameterType="java.lang.String"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from telegram_group
    where groupId = #{groupId,jdbcType=VARCHAR}
  </select>

  <update id="updateLanguage" parameterType="string" >
    update telegram_group  set language = #{language,jdbcType=VARCHAR}
    where groupId = #{groupId,jdbcType=VARCHAR}
  </update>
  <update id="newChatMember" parameterType="string" >
    update telegram_group  set joinTime = NOW(), joinFrequency = joinFrequency+1
    where groupId = #{groupId,jdbcType=VARCHAR}
  </update>
  <update id="leftChatMember" parameterType="string" >
    update telegram_group  set kickOutFrequency = kickOutFrequency+1
    where groupId = #{groupId,jdbcType=VARCHAR}
  </update>
  <update id="upFinisgGame" parameterType="string" >
    update telegram_group  set finishGame = finishGame+1
    where groupId = #{groupId,jdbcType=VARCHAR}
  </update>

  <update id="upMaxOfPeople"  >
    update telegram_group  set MaxOfPeople = #{people,jdbcType=INTEGER}
    where groupId = #{groupId,jdbcType=VARCHAR} and MaxOfPeople &lt; #{people,jdbcType=INTEGER}
  </update>
  <update id="updateGroupData" parameterType="com.m.sql.entity.Telegram_group" >
    update telegram_group
    set title = #{title},
        userName = #{userName}
    where groupId = #{groupId,jdbcType=VARCHAR}
  </update>
</mapper>